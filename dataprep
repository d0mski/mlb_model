import requests
import pandas as pd
from datetime import datetime

url = "https://tank01-mlb-live-in-game-real-time-statistics.p.rapidapi.com/getMLBBettingOdds"

today = datetime.today()
yyyymmdd = today.strftime("%Y%m%d")

querystring = {"gameDate":str(yyyymmdd),"playerProps":"false"}

headers = {
	"X-RapidAPI-Key": "d85b8a5944msh925da968eaa6b6fp1d91b9jsn8961b29ff9a9",
	"X-RapidAPI-Host": "tank01-mlb-live-in-game-real-time-statistics.p.rapidapi.com"
}

response = requests.get(url, headers=headers, params=querystring)
# Insert a check here to see if this days data already exists to not waste a pull
# Add a check y/N if we want data pulled - so we have option to get refreshed data

json_data = response.json()

df_norm = pd.json_normalize(json_data, max_level=1)
dfs = {}
gameIDs = []
full_slate = pd.DataFrame()

for col in df_norm.columns:
    # Convert each dictionary into a DataFrame
    dfs[col] = pd.DataFrame(df_norm[col].tolist())

# grab list of games for today and append in list
for column in dfs:
    if "@" in column:
        gameIDs.append(column)
 # Only pull from fanduel for now
        odds_df = dfs[column]['fanduel'].apply(pd.Series)
        full_slate = pd.concat([full_slate,odds_df])

full_slate['date'] = yyyymmdd

full_slate.to_csv('today_game_s   late.csv')

# If data doesn't exist, append to a csv we have.

# Make csv on a shared location. In meantime set it to a fixed location.

# Run model over data